<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net7.0-android;net7.0-ios;net7.0-maccatalyst</TargetFrameworks>
		<TargetFrameworks Condition="$([MSBuild]::IsOSPlatform('windows'))">$(TargetFrameworks);net7.0-windows10.0.19041.0</TargetFrameworks>
		<!-- Uncomment to also build the tizen app. You will need to install tizen by following this: https://github.com/Samsung/Tizen.NET -->
		<!-- <TargetFrameworks>$(TargetFrameworks);net7.0-tizen</TargetFrameworks> -->
		<OutputType>Exe</OutputType>
		<RootNamespace>PopupSample</RootNamespace>
		<UseMaui>true</UseMaui>
		<SingleProject>true</SingleProject>
		<ImplicitUsings>enable</ImplicitUsings>

		<!-- Display name -->
		<ApplicationTitle>PopupSample</ApplicationTitle>

		<!-- App Identifier -->
		<ApplicationId>com.companyname.popupsample</ApplicationId>
		<ApplicationIdGuid>82d437c7-cfd3-4ce2-b99f-08471029b54a</ApplicationIdGuid>

		<!-- Versions -->
		<ApplicationDisplayVersion>1.0</ApplicationDisplayVersion>
		<ApplicationVersion>1</ApplicationVersion>

		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'ios'">11.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'maccatalyst'">13.1</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'android'">21.0</SupportedOSPlatformVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</SupportedOSPlatformVersion>
		<TargetPlatformMinVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'windows'">10.0.17763.0</TargetPlatformMinVersion>
		<SupportedOSPlatformVersion Condition="$([MSBuild]::GetTargetPlatformIdentifier('$(TargetFramework)')) == 'tizen'">6.5</SupportedOSPlatformVersion>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|net7.0-ios|AnyCPU'">
	  <CreatePackage>false</CreatePackage>
	</PropertyGroup>
	<ItemGroup>
		<!-- App Icon -->
		<MauiIcon Include="Resources\AppIcon\appicon.svg" ForegroundFile="Resources\AppIcon\appiconfg.svg" Color="#512BD4" />

		<!-- Splash Screen -->
		<MauiSplashScreen Include="Resources\Splash\splash.svg" Color="#512BD4" BaseSize="128,128" />

		<!-- Images -->
		<MauiImage Include="Resources\Images\*" />
		<MauiFont Include="Resources\Fonts\*" />

		<!-- Raw Assets (also remove the "Resources\Raw" prefix) -->
		<MauiAsset Include="Resources\Raw\**" LogicalName="%(RecursiveDir)%(Filename)%(Extension)" />
	</ItemGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.Extensions.Logging.Debug" Version="7.0.0" />
	</ItemGroup>
	<ItemGroup Condition="$(TargetFramework.StartsWith('Xamarin.iOS')) != true AND $(TargetFramework.StartsWith('net6.0-ios')) != true AND $(TargetFramework.StartsWith('net7.0-ios')) != true AND $(TargetFramework.StartsWith('net6.0-maccatalyst')) != true AND $(TargetFramework.StartsWith('net7.0-maccatalyst')) != true ">
    <Compile Remove="**\**\*.iOS.cs" />
    <None Include="**\**\*.iOS.cs" />
    <Compile Remove="**\iOS\**\*.cs" />
    <None Include="**\iOS\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('Xamarin.Mac')) != true ">
    <Compile Remove="**\*.Mac.cs" />
    <None Include="**\*.Mac.cs" />
    <Compile Remove="**\Mac\**\*.cs" />
    <None Include="**\Mac\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('Xamarin.Mac')) != true AND $(TargetFramework.StartsWith('Xamarin.iOS')) != true AND $(TargetFramework.StartsWith('net6.0-ios')) != true AND $(TargetFramework.StartsWith('net7.0-ios')) != true AND $(TargetFramework.StartsWith('net6.0-maccatalyst')) != true AND $(TargetFramework.StartsWith('net7.0-maccatalyst')) != true">
    <Compile Remove="**\*.MaciOS.cs" />
    <None Include="**\*.MaciOS.cs" />
    <Compile Remove="**\MaciOS\**\*.cs" />
    <None Include="**\MaciOS\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('MonoAndroid')) != true AND $(TargetFramework.StartsWith('net6.0-android')) != true AND $(TargetFramework.StartsWith('net7.0-android')) != true ">
    <Compile Remove="**\**\*.Android.cs" />
    <None Include="**\**\*.Android.cs" />
    <Compile Remove="**\Android\**\*.cs" />
    <None Include="**\Android\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.StartsWith('netstandard')) != true AND '$(TargetFramework)' != 'net6.0' AND '$(TargetFramework)' != 'net7.0'">
    <Compile Remove="**\*.Standard.cs" />
    <None Include="**\*.Standard.cs" />
    <Compile Remove="**\Standard\**\*.cs" />
    <None Include="**\Standard\**\*.cs" />
  </ItemGroup>
  <ItemGroup Condition="$(TargetFramework.Contains('-windows')) != true ">
    <Compile Remove="**\*.Windows.cs" />
    <None Include="**\*.Windows.cs" />
    <Compile Remove="**\Windows\**\*.cs" />
    <None Include="**\Windows\**\*.cs" />
    <Compile Remove="**\*.uwp.cs" />
    <None Include="**\*.uwp.cs" />
  </ItemGroup>
  <ItemGroup Condition=" $(TargetFramework.StartsWith('uap10.0')) ">
    <Compile Remove="**\*.uwp.cs" />
    <None Include="**\*.uwp.cs" />
  </ItemGroup>
  
  <!-- Android -->
  <PropertyGroup Condition=" $(TargetFramework.StartsWith('net6.0-android')) OR $(TargetFramework.StartsWith('net7.0-android'))">
    <DefineConstants>$(DefineConstants);MONOANDROID</DefineConstants>
  </PropertyGroup>

  <!-- iOS -->
  <PropertyGroup Condition=" '$(TargetFramework)' == 'net6.0-ios' OR '$(TargetFramework)' == 'net7.0-ios' ">
    <DefineConstants>$(DefineConstants);IOS</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition=" '$(TargetFramework)' == 'net6.0-maccatalyst' OR '$(TargetFramework)' == 'net7.0-maccatalyst' ">
    <DefineConstants>$(DefineConstants);MACCATALYST;IOS</DefineConstants>
  </PropertyGroup>

  <PropertyGroup Condition="'$(Configuration)|$(TargetFramework)|$(Platform)'=='Debug|netstandard2.0|AnyCPU'">
    <TreatWarningsAsErrors>false</TreatWarningsAsErrors>
  </PropertyGroup>
  <Target Name="Net6WinUIWorkaround" BeforeTargets="_GetSdkToolsPathsFromSdk" Condition="$(TargetFramework.Contains('-windows')) == true ">
    <PropertyGroup>
      <TargetPlatformIdentifierAdjusted>UAP</TargetPlatformIdentifierAdjusted>
    </PropertyGroup>
  </Target>
</Project>
